name: "Release Startify Extension"
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  lint:
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    steps:
      - uses: ./.github/actions/common-setup
      - name: Run lint
        run: pnpm eslint .

  vitest:
    needs: lint
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    steps:
      - uses: ./.github/actions/common-setup
      - name: Run vitest
        run: pnpm vitest

  playwright-ct:
    needs: lint
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    steps:
      - uses: ./.github/actions/common-setup
      - name: Install Playwright Browsers
        run: pnpm playwright install
      - name: Build Extension
        run: PARCEL_WORKER_BACKEND=process pnpm build
      - name: Run Playwright tests
        run: pnpm e2e:ct

  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        target: [chrome-mv3, firefox-mv3, firefox-mv2]
    steps:
      - uses: ./.github/actions/common-setup
      - uses: ./.github/actions/setup-env
        env:
          PLASMO_PUBLIC_WALLPAPER_API: ${{ secrets.PLASMO_PUBLIC_WALLPAPER_API }}
          PLASMO_PUBLIC_WEATHER_API_KEYS: ${{ secrets.PLASMO_PUBLIC_WEATHER_API_KEYS }}
      - name: Build and zip
        run: pnpm plasmo build --zip --target=${{ matrix.target }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: build/${{ matrix.target }}-prod

  playwright:
    needs: [build]
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    steps:
      - uses: ./.github/actions/common-setup
      - name: Install Playwright Browsers
        run: pnpm playwright install --with-deps chromium
      - name: Download chrome extension artifact
        uses: actions/download-artifact@v4
        with:
          name: chrome-mv3
          path: build/
      - name: Run Playwright tests
        run: pnpm e2e

  check_artifacts:
    needs: [build]
    runs-on: ubuntu-24.04
    steps:
      - uses: ./.github/actions/common-setup

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: build/

      - name: List downloaded files
        run: |
          echo "Listing build output:"
          ls -R build/

      - name: Check specific paths
        run: |
          test -f build/chrome-mv3-prod.zip && echo "✅ chrome-mv3-prod.zip found"
          test -f build/firefox-mv3-prod.zip && echo "✅ firefox-mv3-prod.zip found"
          test -f build/firefox-mv2-prod.zip && echo "✅ firefox-mv2-prod.zip found"
