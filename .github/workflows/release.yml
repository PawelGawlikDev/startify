name: "Release Startify Extension"
on:
  push:
    tags:
      - v*.*.*

permissions:
  contents: write

jobs:
  lint:
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: true
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "pnpm"
      - name: Run lint
        run: pnpm eslint .

  vitest:
    needs: lint
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: true
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "pnpm"
      - name: Run vitest
        run: pnpm vitest

  playwright-ct:
    runs-on: ubuntu-24.04
    needs: lint
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: true
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "pnpm"
      - name: Install Playwright Browsers
        run: pnpm playwright install
      - name: Build Extension
        run: PARCEL_WORKER_BACKEND=process pnpm build
      - name: Run Playwright tests
        run: pnpm e2e:ct

  playwright:
    needs: lint
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: true
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "pnpm"
      - name: Install Playwright Browsers
        run: pnpm playwright install --with-deps chromium
      - name: Write .env.production file
        run: |
          echo "PLASMO_PUBLIC_WALLPAPER_API=${{ secrets.PLASMO_PUBLIC_WALLPAPER_API }}" >> .env.production
          echo "PLASMO_PUBLIC_WEATHER_API_KEYS=${{ secrets.PLASMO_PUBLIC_WEATHER_API_KEYS }}" >> .env.production
      - name: Build Extension
        run: PARCEL_WORKER_BACKEND=process pnpm build
      - name: Run Playwright tests
        run: pnpm e2e

  release_chrome:
    needs: [vitest, playwright]
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: true
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "pnpm"
      - name: Write .env.production file
        run: |
          echo "PLASMO_PUBLIC_WALLPAPER_API=${{ secrets.PLASMO_PUBLIC_WALLPAPER_API }}" >> .env.production
          echo "PLASMO_PUBLIC_WEATHER_API_KEYS=${{ secrets.PLASMO_PUBLIC_WEATHER_API_KEYS }}" >> .env.production
      - name: Build and zip Chrome extension
        run: PARCEL_WORKER_BACKEND=process pnpm build --zip --env=.env.chrome
      - name: Upload to Chrome Web Store
        uses: mobilefirstllc/cws-publish@latest
        with:
          action: "publish"
          client_id: ${{ secrets.CHROME_CLIENT_ID }}
          client_secret: ${{ secrets.CHROME_CLIENT_SECTER }}
          refresh_token: ${{ secrets.CHROME_REFRESH_TOKEN }}
          extension_id: "fjjipcmebaelmnkkbdjnhhjbgenecgbd"
          zip_file: "build/chrome-mv3-prod.zip"

  release_firefox:
    needs: [vitest, playwright]
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: true
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "pnpm"
      - name: Write .env.production file
        run: |
          echo "PLASMO_PUBLIC_WALLPAPER_API=${{ secrets.PLASMO_PUBLIC_WALLPAPER_API }}" >> .env.production
          echo "PLASMO_PUBLIC_WEATHER_API_KEYS=${{ secrets.PLASMO_PUBLIC_WEATHER_API_KEYS }}" >> .env.production
      - name: Build and zip Firefox MV3 extension
        run: PARCEL_WORKER_BACKEND=process pnpm build --zip --target=firefox-mv3 --env=.env.firefox
      - name: Upload to Mozilla Add-ons
        uses: wdzeng/firefox-addon@v1
        with:
          addon-guid: "{d5e5fe42-da08-4573-8ffd-6075ae68c834}"
          xpi-path: build/firefox-mv3-prod.zip
          jwt-issuer: ${{ secrets.FIREFOX_API_KEY }}
          jwt-secret: ${{ secrets.FIREFOX_API_SECRET }}

  release_github:
    needs: [vitest, playwright]
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: true
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "pnpm"
      - name: Write .env.production file
        run: |
          echo "PLASMO_PUBLIC_WALLPAPER_API=${{ secrets.PLASMO_PUBLIC_WALLPAPER_API }}" >> .env.production
          echo "PLASMO_PUBLIC_WEATHER_API_KEYS=${{ secrets.PLASMO_PUBLIC_WEATHER_API_KEYS }}" >> .env.production
      - name: Build and zip extensions
        run: |
          PARCEL_WORKER_BACKEND=process pnpm build --zip --env=.env.chrome
          PARCEL_WORKER_BACKEND=process pnpm build --zip --target=firefox-mv3 --env=.env.firefox
          PARCEL_WORKER_BACKEND=process pnpm build --zip --target=firefox-mv2 --env=.env.firefox
      - name: Release on GitHub (Firefox MV2)
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: |
            build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
